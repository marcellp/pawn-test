/* pawn-test
 * A ridiculously simple automated testing framework for PAWN scripts.
 *
 * Copyright (c) 2015 PÃ©k Marcell
 * This project is covered by the MIT License, see the attached LICENSE
 * file for more details.
 *
 * main.inc - global variables and structures
 *
 */
 
enum {
    PAWNTEST_NOERROR,
    PAWNTEST_OBJ_NOT_INITIALIZED,
    PAWNTEST_SUITE_OUT_OF_BOUNDS,
    PAWNTEST_CASE_OUT_OF_BOUNDS,
    PAWNTEST_STR_OUT_OF_BOUNDS,
    PAWNTEST_OBJ_NOT_FOUND
};

enum {
    PAWNTEST_CASE_FAILED,
    PAWNTEST_CASE_PASSED,
    PAWNTEST_SUITE_FAILED,
    PAWNTEST_CASE_SKIPPED,    
    PAWNTEST_SETUP_FAILED,
    PAWNTEST_SETUP_SUCCESSFUL,
    PAWNTEST_TEARDOWN_FAILED,
    PAWNTEST_TEARDOWN_SUCCESSFUL,
    _PAWNTEST_EXPECTED_FAILURE
}
 
enum _E_PAWNTEST_SUITES {
    bool:PAWNTEST_INITIALIZED,
    PAWNTEST_SUITE_NAME[PAWNTEST_MAX_SUITE_NAME],
    PAWNTEST_NUM_OF_CASES,
    PAWNTEST_CONSTRUCTOR_NAME[PAWNTEST_MAX_SUITE_NAME],
    PAWNTEST_DESTRUCTOR_NAME[PAWNTEST_MAX_SUITE_NAME],
    bool:PAWNTEST_STOP
};

enum _E_PAWNTEST_CASES {
    PAWNTEST_CASE_NAME[PAWNTEST_MAX_SUITE_NAME],
    bool:PAWNTEST_EXPECTED_TO_FAIL,
    PAWNTEST_RETURN_WITH
}

new _PawnTest_Suites[PAWNTEST_MAX_SUITES][_E_PAWNTEST_SUITES];
new _PawnTest_Cases[PAWNTEST_MAX_SUITES][PAWNTEST_MAX_CASES][_E_PAWNTEST_CASES];

new PawnTest_errno;
new bool:PawnTest_testing;